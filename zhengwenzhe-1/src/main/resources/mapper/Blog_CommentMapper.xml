<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fy.dao.Blog_commentMapper">

	<select id="list"  resultType="blog_Comment">
		select * from tb_blog_comment
		<where>
			is_deleted != 1;
		</where>
	</select>
	
	<select id="countByBlogId" resultType="int" parameterType="int">
		select count(*) from tb_blog_comment where is_deleted !=1 and blog_id=#{blog_id} and comment_status = 1
	</select>
	
	<select id="findByBlogId" resultType="blog_comment">
		select * from tb_blog_comment where is_deleted !=1 and blog_id=#{blog_id} and comment_status = 1
	</select>
	
	<update id="up" parameterType="int">
			update tb_blog_comment
			set
			is_deleted= 1 
			<where>
				comment_id in
				<foreach collection="array" item="ids" open="(" close=")" separator=",">
					 #{ids}
				</foreach>
			</where>
	</update>
	
	<select id="count" resultType="int">
		select count(*) from tb_blog_comment where is_deleted !=1
	</select>
	
	<select id="list_comment" resultType="blog_Comment">
		select * from tb_blog_comment where comment_id = #{comment_id} and comment_status != 0
	</select>
	
	<update id="audit" parameterType="int">
			update tb_blog_comment
			set
			comment_status = 1 
			<where>
			comment_id in
				<foreach collection="array" item="ids" open="(" close=")" separator=",">
					 #{ids}
				</foreach>
			</where>
	</update>
	
	<update id="edit_comment" parameterType="blog_comment">
		update tb_blog_comment set reply_body = #{reply_body},reply_create_time=#{reply_create_time} where comment_id = #{comment_id}
	</update>
	
	<insert id="add" parameterType="blog_comment">
		insert into tb_blog_comment(
			<if test="website_url!='' and website_url!=null">
				website_url,
			</if>
		blog_id,commentator,email,comment_body)values(
			<if test="website_url!='' and website_url!=null">
				#{website_url},
			</if>
		#{blog_id},#{commentator},#{email},#{comment_body}
		)
	</insert>
	
</mapper>